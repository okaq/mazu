// oron shapes
console.log(new Date().toString());

// th1n font
// face
const marci = [[[445,51],[453,58]],[[453,58],[458,70]],[[458,70],[460,89]],[[460,89],[462,108]],[[462,108],[459,125]],[[459,125],[453,141]],[[453,141],[439,165]],[[439,165],[421,180]],[[421,180],[397,191]],[[397,191],[376,202]],[[376,202],[361,215]],[[361,215],[351,236]],[[351,236],[344,263]],[[344,263],[340,281]],[[340,281],[337,295]],[[337,295],[332,323]],[[332,323],[329,347]],[[329,347],[324,366]],[[324,366],[314,383]],[[314,383],[300,397]],[[300,397],[291,415]],[[291,415],[281,447]],[[281,447],[281,465]],[[281,465],[287,484]],[[287,484],[297,505]],[[297,505],[318,528]],[[318,528],[345,546]],[[345,546],[379,569]],[[379,569],[394,579]],[[675,80],[662,103]],[[662,103],[644,129]],[[644,129],[635,147]],[[635,147],[635,168]],[[635,168],[644,189]],[[644,189],[661,205]],[[661,205],[672,222]],[[672,222],[682,242]],[[682,242],[689,267]],[[689,267],[701,296]],[[701,296],[707,325]],[[707,325],[714,360]],[[714,360],[718,395]],[[718,395],[723,433]],[[379,239],[388,247]],[[388,247],[397,252]],[[397,252],[410,258]],[[410,258],[423,266]],[[423,266],[438,274]],[[438,274],[458,287]],[[458,287],[474,305]],[[474,305],[484,326]],[[484,326],[490,350]],[[490,350],[494,366]],[[494,366],[494,387]],[[494,387],[491,406]],[[491,406],[485,414]],[[485,414],[475,426]],[[475,426],[472,440]],[[472,440],[479,448]],[[479,448],[487,456]],[[500,439],[509,447]],[[509,447],[514,456]],[[514,456],[514,467]],[[514,467],[513,477]],[[513,487],[514,501]],[[514,501],[514,516]],[[514,516],[514,526]],[[424,558],[432,557]],[[432,557],[447,554]],[[447,554],[461,552]],[[461,552],[479,548]],[[479,548],[497,547]],[[497,547],[512,548]],[[512,548],[520,555]],[[520,555],[529,554]],[[529,554],[539,551]],[[539,551],[549,547]],[[549,547],[563,543]],[[563,543],[578,546]],[[578,546],[595,553]],[[595,553],[609,561]],[[609,561],[622,565]],[[622,565],[634,566]],[[634,566],[645,566]],[[645,566],[656,563]],[[656,568],[649,576]],[[649,576],[636,583]],[[636,583],[622,587]],[[622,587],[598,595]],[[598,595],[573,599]],[[573,599],[553,602]],[[553,602],[532,602]],[[532,602],[514,601]],[[514,601],[494,602]],[[494,602],[480,600]],[[641,573],[630,575]],[[630,575],[616,576]],[[616,576],[599,577]],[[599,577],[582,579]],[[582,579],[566,580]],[[566,580],[544,580]],[[544,580],[522,581]],[[522,581],[503,582]],[[503,582],[483,582]],[[483,582],[465,582]],[[318,536],[328,558]],[[328,558],[336,574]],[[336,574],[351,599]],[[351,599],[366,616]],[[366,616],[383,637]],[[383,637],[401,654]],[[401,654],[418,677]],[[418,677],[427,695]],[[427,695],[444,711]],[[444,711],[466,720]],[[466,720],[492,725]],[[492,725],[509,729]],[[509,729],[523,729]],[[523,729],[528,720]],[[528,720],[534,713]],[[432,350],[425,337]],[[425,337],[416,328]],[[416,328],[400,321]],[[400,321],[389,318]],[[389,318],[381,318]],[[381,318],[369,322]],[[369,322],[357,329]],[[426,353],[419,347]],[[419,347],[407,338]],[[407,338],[396,335]],[[396,335],[386,334]],[[386,334],[375,336]],[[434,358],[423,368]],[[423,368],[413,374]],[[413,374],[402,376]],[[402,376],[396,376]],[[384,344],[385,354]],[[385,354],[391,361]],[[391,361],[400,361]],[[400,361],[404,357]],[[404,357],[404,349]],[[496,450],[494,442]],[[494,442],[497,464]],[[497,464],[505,468]],[[454,724],[463,737]],[[463,737],[477,760]],[[477,760],[491,790]],[[491,790],[502,825]],[[502,825],[510,848]],[[510,848],[518,869]],[[518,869],[518,893]],[[518,893],[507,902]],[[507,902],[490,907]]];

// scene
const sce = {
	init() {
		sce.a = {};
		sce.a.r = [1920,1080,0,0];
		sce.a.c = dom.canvas(sce.a.r);
		dom.add(sce.a.c);
		// webgl scene
		sce.b = new THREE.Scene();
		// ortho cam
		sce.c = new THREE.OrthographicCamera(0,1920,1080,0,-1000,1000);
		// renderer
		sce.d = new THREE.WebGLRenderer({canvas:sce.a.c.can});
		sce.d.setClearColor(0x000000);
		sce.d.clearColor();
	}
};

// DOM
const dom = {
	init() {
		dom.a = document.getElementById("alpha");
		console.log(dom.a);
	},
	canvas(r0) {
		let c0 = {};

		c0.can = document.createElement("canvas");
		c0.can.width = r0[0];
		c0.can.height = r0[1];
		c0.can.style.position = "absolute";
		c0.can.style.top = r0[3] + "px";
		c0.can.style.left = r0[2] + "px";

		return c0;
	},
	add(c0) {
		dom.a.appendChild(c0.can);
	},
	remove(c0) {
		dom.a.appendChild(c0.can);
	}
};

// anim
const loop = {
	seq() {
		console.log("start sequence");
		poly.gen();
		geo.poly();
		geo.face();
	}
};

// angles
const rad = {
	polar(x,y) {
		// cart to polar
		let r0 = [];

		let r1 = Math.sqrt(x*x + y*y);
		let th0 = Math.atan2(x,y);
		r0[0] = r1;
		r0[1] = th0;

		return r0;
	},
	cart(r0,th0) {
		let r1 = [];

		let x0 = Math.cos(th0);
		x0 = x0 * r0;
		let y0 = Math.sin(th0);
		y0 = y0 * r0;
		r1[0] = x0;
		r1[1] = y0;

		return r1;
	}
};

// shapes
const poly = {
	gen() {
		// regular polygons inscribed within a circle
		poly.a = [];
		let r0 = 512;
		for (let i = 3; i < 13; i++) {
			let th0 = Math.PI * 2 / i;
			let p0 = [];
			for (let j = 0; j < i; j++) {
				let th1 = th0 * j;
				let p1 = rad.cart(r0,th1);
				let x0 = p1[0] + r0;
				let y0 = p1[1] + r0;
				let vec0 = new THREE.Vector3(x0,y0,0);
				p0.push(vec0);
			}
			poly.a.push(p0);
		}
		console.log(poly.a);
	}
};

// geometry
const geo = {
	poly() {
		geo.a = [];
		for (let i = 0; i < poly.a.length; i++) {
			geo.a[i] = {};
			// line materials
			geo.a[i].a = [];
			// buffer geometries
			geo.a[i].b = [];
			// line objects
			geo.a[i].c = [];
			for (let j = 0; j < poly.a[i].length; j++) {
				geo.a[i].a[j] = new THREE.LineBasicMaterial({color:0x00ff00});
				geo.a[i].b[j] = new THREE.BufferGeometry().setFromPoints(poly.a[i][j]);
				geo.a[i].c[j] = new THREE.Line(geo.a[i].b[j], geo.a[i].a[j]);
			}
		}
		console.log(geo.a);
	},
	face() {
		geo.b = [];
	}
};

// main
(function() {
	console.log("gring oron");
	subs = [dom,sce];
	subs.forEach(el => el.init());
	window.setTimeout(e => loop.seq(e), 1000);
})();


